version: '3.8'

services:
  zookeeper:
    image: zookeeper:3.6-temurin
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: "server.1=zookeeper:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181"
      JVMFLAGS: "-Xms64m -Xmx128m"
      ZOO_4LW_COMMANDS_WHITELIST: "srvr,ruok"
    volumes:
      - zookeeper_datalog:/datalog
      - zookeeper_data:/data
    healthcheck:
      test: ["CMD-SHELL", 'echo "ruok" | nc -w 2 -q 2 localhost 2181 | grep imok']
      interval: 5s
      retries: 5

  zookeeper2:
    image: zookeeper:3.6-temurin
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: "server.1=zookeeper:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181"
      JVMFLAGS: "-Xms64m -Xmx128m"
      ZOO_4LW_COMMANDS_WHITELIST: "srvr,ruok"
    volumes:
      - zookeeper2_datalog:/datalog
      - zookeeper2_data:/data
    healthcheck:
      test: ["CMD-SHELL", 'echo "ruok" | nc -w 2 -q 2 localhost 2181 | grep imok']
      interval: 5s
      retries: 5

  zookeeper3:
    image: zookeeper:3.6-temurin
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: "server.1=zookeeper:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181"
      JVMFLAGS: "-Xms64m -Xmx128m"
      ZOO_4LW_COMMANDS_WHITELIST: "srvr,ruok"
    volumes:
      - zookeeper3_datalog:/datalog
      - zookeeper3_data:/data
    healthcheck:
      test: ["CMD-SHELL", 'echo "ruok" | nc -w 2 -q 2 localhost 2181 | grep imok']
      interval: 5s
      retries: 5

  kafka:
    # It is used for kafka logs.dir - can't be randomly changed
    hostname: kafka
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "3032:3032"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:3032
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_JMX_PORT: 49999
    volumes:
      - kafka_data:/kafka
    depends_on:
      - zookeeper
      - zookeeper2
      - zookeeper3

  kafka2:
    # It is used for kafka logs.dir - can't be randomly changed
    hostname: kafka2
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "3033:3033"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://localhost:3033
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_JMX_PORT: 49999
    volumes:
      - kafka2_data:/kafka
    depends_on:
      - zookeeper
      - zookeeper2
      - zookeeper3

  kafka3:
    # It is used for kafka logs.dir - can't be randomly changed
    hostname: kafka3
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "3034:3034"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://localhost:3034
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_JMX_PORT: 49999
    volumes:
      - kafka3_data:/kafka
    depends_on:
      - zookeeper
      - zookeeper2
      - zookeeper3

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.2.1
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092,kafka2:9092,kafka3:9092
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
    ports:
      - "3082:8081"
    depends_on:
      - kafka
      - kafka2
      - kafka3
    healthcheck:
      test: [ "CMD-SHELL", "curl localhost:8081/subjects" ]
      interval: 20s
      retries: 5

  connect:
    image: confluentinc/cp-kafka-connect:7.2.1
    depends_on:
      - zookeeper
      - zookeeper2
      - zookeeper3
      - kafka
      - kafka2
      - kafka3
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"

      CONNECT_LISTENERS: http://0.0.0.0:8083
      CONNECT_GROUP_ID: "connect-cluster"
      CONNECT_PRODUCER_CLIENT_ID: "connect-worker-producer"
      CONNECT_PRODUCER_ENABLE_IDEMPOTENCE: 'true'

      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-statuses

      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 'true'
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 'true'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schemaregistry:8081'

      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'

      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars

      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR

      # Reduce Connect memory utilization
      KAFKA_JVM_PERFORMANCE_OPTS: -server -XX:+UseG1GC -XX:GCTimeRatio=1
        -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20
        -XX:MaxGCPauseMillis=10000 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent
        -XX:MaxInlineLevel=15 -Djava.awt.headless=true
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8083"]
      interval: 10s
      retries: 5

  akhq:
    image: tchiotludo/akhq:0.22.0
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          security:
            default-group: admin
          connections:
            kafka:
              properties:
                bootstrap.servers: "kafka:9092,kafka2:9092,kafka3:9092"
              schema-registry:
                url: "http://schemaregistry:8081"
              connect:
                - name: connect
                  url: "http://connect:8083"
    ports:
      - 8085:8080
    links:
      - kafka
      - kafka2
      - kafka3
      - schemaregistry
      - connect

  cmak:
    image: ghcr.io/eshepelyuk/dckr/cmak-3.0.0.6:latest
    restart: on-failure
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181,zookeeper2:2181,zookeeper3:2181"
    depends_on:
      - zookeeper
      - zookeeper2
      - zookeeper3

  cmak2zk:
    image: ghcr.io/eshepelyuk/dckr/cmak2zk:latest
    restart: on-failure
    volumes:
      - "${PWD}/cmak2zk/clusters.yaml:/app/etc/clusters.yaml:ro"
    command:
      - 'zookeeper:2181,zookeeper2:2181,zookeeper3:2181'
      - '/app/etc/clusters.yaml'
    depends_on:
      - zookeeper
      - zookeeper2
      - zookeeper3

volumes:
  zookeeper_datalog:
  zookeeper_data:
  zookeeper2_datalog:
  zookeeper2_data:
  zookeeper3_datalog:
  zookeeper3_data:
  kafka_data:
  kafka2_data:
  kafka3_data:
